{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/categories.component.ts","webpack:///src/app/categories/categories.component.html","webpack:///src/app/demo/demo.component.ts","webpack:///src/app/demo/demo.component.html","webpack:///src/app/dialog/ConfirmDialog.ts","webpack:///src/app/dialog/confirm-dialog.html","webpack:///src/app/dialog/general-dialog.ts","webpack:///src/app/dialog/general-dialog.html","webpack:///src/app/edit-jobpost/edit-jobpost.component.ts","webpack:///src/app/edit-jobpost/edit-jobpost.component.html","webpack:///src/app/firebaseops.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/jobpost-editor/jobpost-editor.component.html","webpack:///src/app/jobpost-editor/jobpost-editor.component.ts","webpack:///src/app/models/category.model.ts","webpack:///src/app/newpost/newpost.component.ts","webpack:///src/app/newpost/newpost.component.html","webpack:///src/app/scrollable.directive.ts","webpack:///src/app/studymaterial/studymaterial.component.html","webpack:///src/app/studymaterial/studymaterial.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","path","component","declarations","providers","bootstrap","CategoriesComponent","firebaseOps","dialog","categories","newCategoryName","isLoading","getCategories","subscribe","cats","console","log","newCat","addCategory","open","data","cat","deleteCategory","displayName","submitForm","DemoComponent","obj","onFormComplete","ConfirmDialog","GeneralDialog","EditJobpostComponent","router","jobpost","window","history","state","undefined","navigate","FirebaseopsService","firestore","storage","collection","ref","limit","orderBy","lastPost","startAfter","createdDate","jobId","doc","add","category","tagName","keyName","toLowerCase","replace","set","categoryName","valueChanges","attachment","mediaFolderPath","fileToUpload","name","filePath","Date","getTime","uploadTask","upload","uploadProgress$","percentageChanges","downloadUrl$","getDownloadUrl$","pipe","_","getDownloadURL","subject","val","map","i","next","asObservable","providedIn","HeaderComponent","HomeComponent","documentId","documentToJobPost","a","payload","getInitialJobPosts","snapshotChanges","actions","jobposts","lastJobPost","length","fetchNextJobposts","concat","jobPost","dialogRef","afterClosed","result","deleteJobPost","loadInitialPost","scrollHandler","JobpostEditorComponent","snackBar","destroy$","onComplete","jobType","lastDate","coverImage","tags","categoriesSelected","attachmentsToBeAdded","initiateAllFields","catToInclude","categoriesOptions","filter","includes","categorySelected","type","files","attachmentToUpload","item","tag","attachments","att","fileName","push","fileToRemove","uploadFile","coverImageToUpload","uploadAttachments","attachmentsUploaded","selectedTagNames","createJobPost","modifyJobPost","emit","addJobPost","description","jobContent","content","file","url","fileUrl","downloadUrl","uploadFileAndGetMetadata","error","newImageUrl","newTags","jobAttachemnet","imageUrl","onItemChange","handleFileInput","addtoTempAttachmentList","addToTempCategory","Category","NewpostComponent","ScrollableDirective","el","scrollPosition","event","top","target","scrollTop","height","nativeElement","scrollHeight","offset","offsetHeight","err","StudymaterialComponent","studyMaterialList","getStudyMaterials","fileSelected","addStudyMaterial","uploadDocument","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'adminapp';\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n    </button>\n    <h1>Job for you Tamizha</h1>\n    <span class=\"menu-spacer\"></span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-sidenav-container>\n  <mat-sidenav #sidenav>\n    <mat-nav-list>\n\n      <a mat-list-item [routerLink]=\"'/'\"> Home </a>\n      <a mat-list-item [routerLink]=\"'/addpost'\"> Add new job post </a>\n      <a mat-list-item [routerLink]=\"'/categories'\"> Categories </a>\n      <a mat-list-item [routerLink]=\"'/users'\"> Users </a>\n      <a mat-list-item [routerLink]=\"'/study-materials'\"> Study Materials</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div>\n\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { JobpostEditorComponent } from './jobpost-editor/jobpost-editor.component';\nimport { FirebaseopsService } from './firebaseops.service';\nimport { RouterModule } from '@angular/router';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport { DemoComponent } from './demo/demo.component';\nimport { NewpostComponent } from './newpost/newpost.component';\nimport { ScrollableDirective } from './scrollable.directive';\nimport { EditJobpostComponent } from './edit-jobpost/edit-jobpost.component';\nimport { MatDialogModule} from '@angular/material/dialog';\nimport { GeneralDialog } from './dialog/general-dialog';\nimport { MatDatepickerModule,} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { StudymaterialComponent } from './studymaterial/studymaterial.component';\nimport { ConfirmDialog } from './dialog/ConfirmDialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    JobpostEditorComponent,\n    DemoComponent,\n    NewpostComponent,\n    ScrollableDirective,\n    EditJobpostComponent,\n    GeneralDialog,\n    ConfirmDialog,\n    CategoriesComponent,\n    StudymaterialComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent },\n      { path: 'addpost', component: NewpostComponent },\n      { path: 'editpost', component: EditJobpostComponent},\n      { path: 'categories', component: CategoriesComponent},\n      {path: 'study-materials', component: StudymaterialComponent}\n    ]),\n    BrowserAnimationsModule,\n    InfiniteScrollModule\n  ],\n  providers: [FirebaseopsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../models/category.model';\nimport { FirebaseopsService } from '../firebaseops.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GeneralDialog } from '../dialog/general-dialog';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  categories: Category[] = [];\n  newCategoryName: string = '';\n  isLoading : boolean = false;\n\n  constructor(private firebaseOps: FirebaseopsService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.firebaseOps.getCategories().subscribe((cats) => {\n      console.log(cats);\n      this.categories = cats;\n    });\n  }\n\n  loadCategories(){\n    this.firebaseOps.getCategories().subscribe((cats) => {\n      console.log(cats);\n      this.categories = cats;\n    });\n  }\n\n  submitForm() {\n    console.log(this.newCategoryName);\n    this.isLoading = true;\n    let newCat = new Category(this.newCategoryName, this.newCategoryName);\n    this.firebaseOps.addCategory(newCat).then(()=>{\n      //this.loadCategories();\n      this.dialog.open(GeneralDialog, {data: 'Category added!'});\n      this.isLoading = false;\n    })\n  }\n\n  deleteCategory(cat: Category){\n    this.isLoading = true;\n    this.firebaseOps.deleteCategory(cat.displayName).then(()=>{\n     // this.loadCategories();\n      this.dialog.open(GeneralDialog, {data: 'Category Removed!'});\n      this.isLoading = false;\n    })\n  }\n\n}\n","<section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <h1 class=\"title\">Categories</h1>\n  </div>\n</section>\n\n<section class=\"section\">\n  <div class=\"container\">\n    <form #jobPostForm=\"ngForm\" (ngSubmit)=\"submitForm()\">\n      <div class=\"field\">\n        <label class=\"label\">Job Title</label>\n        <input type=\"text\" name=\"title\" class=\"input\" [(ngModel)]=\"newCategoryName\" #titleInput=\"ngModel\" required />\n        <div class=\"help is-error\" *ngIf=\"titleInput.invalid && titleInput.touched\">\n          Title is required\n        </div>\n      </div>\n      <button type=\"submit\" class=\"button is-large is-warning\"\n      [disabled]=\"jobPostForm.invalid\">Submit</button>\n    </form>\n  </div>\n\n</section>\n<section class=\"section\">\n  <div class=\"container\">\n    <mat-list>\n      <mat-list-item *ngFor=\"let cat of categories\">\n        <h3 mat-line>{{cat.displayName}} </h3>\n        <p mat-line>\n          <span> Tag name (internal): {{cat.tagName}} </span>\n        </p>\n        <button mat-icon-button (click)=\"deleteCategory(cat)\">\n          <mat-icon class=\"mat-24\">delete</mat-icon>\n        </button>\n      </mat-list-item>\n    </mat-list>\n  </div>\n</section>\n\n<div class=\"overlay\" *ngIf=\"isLoading\" >\n  <div class=\"center\">\n      <mat-progress-spinner diameter=50\n                          mode=\"indeterminate\"\n                color=\"accent\">\n    </mat-progress-spinner>\n  </div>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onFormComplete( obj){\n    console.log( obj);\n  }\n\n\n}\n","<section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">Add Job Post!</h1>\n    </div>\n  </div>\n</section>\n\n<app-jobpost-editor  (onComplete)=\"onFormComplete($event)\" ></app-jobpost-editor>\n","import { Component, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'confirm-dialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class ConfirmDialog {\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any){\n\n  }\n\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n}\n","<h1 mat-dialog-title>Alert</h1>\n<div mat-dialog-content>{{data}}</div>\n<div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"false\">No</button>\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'general-dialog',\n  templateUrl: 'general-dialog.html',\n})\nexport class GeneralDialog {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any){\n\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n}\n","<h1 mat-dialog-title>Alert</h1>\n<div mat-dialog-content>{{data}}</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { JobPost } from '../models/jobpost.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-jobpost',\n  templateUrl: './edit-jobpost.component.html',\n  styleUrls: ['./edit-jobpost.component.css']\n})\nexport class EditJobpostComponent implements OnInit {\n  jobId: string;\n  jobpost: JobPost\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.jobpost = window.history.state['jobToEdit'];\n    if(this.jobpost==null || this.jobpost == undefined){\n      this.router.navigate(['']);\n    }\n    console.log(this.jobpost);\n    console.log(this.jobpost == undefined);\n  }\n\n  onFormComplete( obj){\n    console.log( obj);\n  }\n}\n","<section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">Edit Job Post!</h1>\n    </div>\n  </div>\n</section>\n\n<app-jobpost-editor *ngIf=\"jobpost!=null\" [documentId]=\"jobpost.id\" [jobPost]=\"jobpost\" (onComplete)=\"onFormComplete($event)\" ></app-jobpost-editor>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument, AngularFirestoreCollection, DocumentSnapshot, DocumentReference } from '@angular/fire/firestore';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport { firestore } from 'firebase';\nimport { Observable, from, Subscription, Subject, pipe } from 'rxjs';\nimport { JobPost, Attachment } from './models/jobpost.model';\nimport { Category } from './models/category.model';\nimport { finalize } from 'rxjs/operators';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseopsService {\n\n  constructor(private firestore: AngularFirestore, private storage: AngularFireStorage) { }\n\n  getInitialJobPosts(): AngularFirestoreCollection<JobPost> {\n    return this.firestore.collection<JobPost>('jobposts', ref => ref.limit(2).orderBy('createdDate', 'desc'));\n  }\n\n  fetchNextJobposts(lastPost: JobPost): AngularFirestoreCollection<JobPost> {\n    return this.firestore.collection<JobPost>('jobposts', ref => ref.limit(2).orderBy('createdDate', 'desc').startAfter(lastPost.createdDate));\n  }\n\n  getJobPost(jobId: string): AngularFirestoreDocument<JobPost> {\n    return this.firestore.doc<JobPost>('jobposts/HlMXGey9lkMcDyndtZYH')\n  }\n\n  addJobPost(jobpost: JobPost): Promise<DocumentReference> {\n    delete jobpost.id;\n    return this.firestore.collection(\"jobposts\").add(jobpost);\n  }\n\n  addCategory(category: Category): Promise<void> {\n    var obj = { 'display-name': category.displayName, 'tag-short-hand': category.tagName }\n    var keyName = category.displayName.toLowerCase().replace(\" \", \"\");\n    return this.firestore.collection('categories').doc(keyName).set(obj);\n  }\n\n  deleteCategory(categoryName: string): Promise<void> {\n    var keyName = categoryName.toLowerCase().replace(\" \", \"\");\n    return this.firestore.collection('categories').doc(keyName).delete();\n  }\n\n  getStudyMaterials(): Observable<Attachment[]> {\n    return this.firestore.collection<Attachment>(\"studymaterial\").valueChanges()\n  }\n\n  addStudyMaterial(attachment: Attachment): Promise<DocumentReference> {\n    return this.firestore.collection(\"studymaterial\").add(attachment);\n  }\n\n  modifyJobPost(jobpost): Promise<void> {\n    return this.firestore.collection(\"jobposts\").doc(jobpost.id).set(jobpost);\n  }\n\n  deleteJobPost(jobpost): Promise<void> {\n    return this.firestore.collection(\"jobposts\").doc(jobpost.id).delete();\n  }\n\n  uploadFileAndGetMetadata(mediaFolderPath: string, fileToUpload: File): FilesUploadMetadata {\n    const { name } = fileToUpload;\n    const filePath = `${mediaFolderPath}/${new Date().getTime()}_${name}`;\n    const uploadTask: AngularFireUploadTask = this.storage.upload(\n      filePath,\n      fileToUpload,\n    );\n    return {\n      uploadProgress$: uploadTask.percentageChanges(),\n      downloadUrl$: this.getDownloadUrl$(uploadTask, filePath),\n    };\n  }\n\n  private getDownloadUrl$(\n    uploadTask: AngularFireUploadTask,\n    path: string,\n  ): Observable<string> {\n    return from(uploadTask).pipe(\n      switchMap((_) => this.storage.ref(path).getDownloadURL()),\n    );\n  }\n\n  getCategories(): Observable<Category[]> {\n    var subject = new Subject<Category[]>();\n    this.firestore.collection('categories').valueChanges().subscribe(val => {\n      var categories = val.map(i => new Category(i['display-name'], i['tag-short-hand']));\n      subject.next(categories);\n    });\n    return subject.asObservable()\n  }\n}\n\nexport interface FilesUploadMetadata {\n  uploadProgress$: Observable<number>;\n  downloadUrl$: Observable<string>;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar is-dark\">\n    <div class=\"navbar-brand\">\n        <a class=\"navbar-item\">\n            Job for you\n        </a>\n        <a role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n    </div>\n  \n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FirebaseopsService } from '../firebaseops.service';\nimport { JobPost } from '../models/jobpost.model';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialog } from '../dialog/ConfirmDialog';\nimport { GeneralDialog } from '../dialog/general-dialog';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  documentId: string = 'HlMXGey9lkMcDyndtZYH';\n  jobPost: JobPost;\n  jobposts: JobPost[];\n  firstJobPost: JobPost;\n  lastJobPost: JobPost;\n  isLoading: boolean = false;\n\n  //cards = [1,2,3,4,5,6,7,8]\n\n  constructor(private firebaseOps: FirebaseopsService, private router: Router, private dialog: MatDialog) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.firebaseOps.getInitialJobPosts().snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(this.documentToJobPost);\n      })).subscribe(val => {\n        this.jobposts = val;\n        this.lastJobPost = val[val.length - 1];\n      })\n\n  }\n\n  loadInitialPost(){\n    this.firebaseOps.getInitialJobPosts().snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(this.documentToJobPost);\n      })).subscribe(val => {\n        this.jobposts = val;\n        this.lastJobPost = val[val.length - 1];\n      });\n  }\n\n  onFormComplete(obj) {\n    console.log(obj);\n  }\n\n  scrollHandler() {\n    console.log(\"Scrolled down\");\n    if (this.lastJobPost != null) {\n      this.firebaseOps.fetchNextJobposts(this.lastJobPost).snapshotChanges().pipe(\n        map(actions => {\n          return actions.map(this.documentToJobPost);\n        })).subscribe(val => {\n          this.jobposts = this.jobposts.concat(val);\n          this.lastJobPost = val[val.length - 1];\n\n        })\n\n    }\n  }\n\n  documentToJobPost = a => {\n    const data = a.payload.doc.data() as JobPost;\n    const id = a.payload.doc.id;\n    return { id, ...data } as JobPost;\n  }\n\n\n  editJobPost(jobPost) {\n    this.router.navigate(['editpost'], {\n      state: { 'jobToEdit': jobPost }\n    });\n  }\n\n   deleteJobPost(jobPost) {\n    console.log(jobPost);\n    const dialogRef = this.dialog.open(ConfirmDialog, { data: \"Are you sure you want to delete the post?\"});\n\n    dialogRef.afterClosed().subscribe(result=> {\n      console.log(result);\n      if(result){\n        this.isLoading = true;\n         this.firebaseOps.deleteJobPost(jobPost).then(()=>{\n            this.isLoading = false;\n            this.loadInitialPost();\n            this.dialog.open(GeneralDialog, {data: \"Post deleted successfully\"});\n\n         })\n      }\n    });\n  }\n\n}\n","<section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <h1 class=\"title\">Job Posts</h1>\n  </div>\n</section>\n\n<section class=\"section\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\"\n  (scrolled)=\"scrollHandler()\">\n  <div *ngFor=\"let job of jobposts\">\n    <div class=\"card\">\n      <div class=\"card-content\">\n        <div class=\"media\">\n          <div class=\"media-left\">\n            <figure class=\"image is-128x128\">\n              <img [src]=\"job.imageUrl\" alt=\"Placeholder image\">\n            </figure>\n          </div>\n          <div class=\"media-content\">\n            <p class=\"title is-4\">{{job.title}}</p>\n            <p class=\"subtitle is-6\">Created on: {{job.createdDate.toDate() | date:'dd-MM-yyyy'}}</p>\n            <p>\n              {{job.description}}\n            </p>\n          </div>\n        </div>\n      </div>\n      <footer class=\"card-footer\">\n        <p class=\"card-footer-item\">\n          <span>\n            <button class=\"button is-danger\" (click)=\"deleteJobPost(job)\">Delete</button>\n          </span>\n        </p>\n        <p class=\"card-footer-item\">\n          <span>\n            <button class=\"button is-warning\" (click)=\"editJobPost(job)\">Edit </button>\n          </span>\n        </p>\n      </footer>\n    </div>\n    <br />\n  </div>\n\n\n</section>\n<div class=\"overlay\" *ngIf=\"isLoading\" >\n  <div class=\"center\">\n      <mat-progress-spinner diameter=50\n                          mode=\"indeterminate\"\n                color=\"accent\">\n    </mat-progress-spinner>\n  </div>\n  </div>\n","<section class=\"section\">\n  <div class=\"container\">\n    <form (ngSubmit)=\"submitForm()\" #jobPostForm=\"ngForm\">\n      <div class=\"field\">\n        <label class=\"label\">Job Title</label>\n        <input type=\"text\" name=\"title\" class=\"input\" [(ngModel)]=\"title\" #titleInput=\"ngModel\" required />\n        <div class=\"help is-error\" *ngIf=\"titleInput.invalid && titleInput.touched\">\n          Title is required\n        </div>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Description</label>\n        <input type=\"text\" name=\"description\" class=\"input\" [(ngModel)]=\"description\" #descInput=\"ngModel\" required />\n        <div class=\"help is-error\" *ngIf=\"descInput.invalid && descInput.touched\">\n          Description is required\n        </div>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Post Content</label>\n        <textarea type=\"text\" name=\"content\" class=\"textarea\" [(ngModel)]=\"jobContent\" #contentInput=\"ngModel\"\n          required></textarea>\n        <div class=\"help is-error\" *ngIf=\"contentInput.invalid && contentInput.touched\">\n          Job Content is required\n        </div>\n      </div>\n      <div>\n        <label class=\"label\">Last Date</label>\n        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"lastDate\" name=\"lastDate\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Job Type</label>\n        <div class=\"control\">\n          <label class=\"radio\">\n            <input type=\"radio\" name=\"jobtype\" [(ngModel)]=\"jobType\" value=\"govt\" (change)=\"onItemChange('govt')\">\n            Government Job\n          </label>\n          <label class=\"radio\">\n            <input type=\"radio\" name=\"jobtype\" [(ngModel)]=\"jobType\" value=\"pvt\" (change)=\"onItemChange('pvt')\">\n            Private Job\n          </label>\n        </div>\n      </div>\n      <diV class=\"field\">\n        <label class=\"label\">Cover Image</label>\n        <figure *ngIf=\"jobPost!=null && jobPost.imageUrl!=null\" class=\"image is-128x128\">\n          <img [src]=\"jobPost.imageUrl\">\n        </figure>\n        <div class=\"file has-name is-medium\">\n          <label class=\"file-label\">\n            <input class=\"file-input\" type=\"file\" name=\"resume\"\n              (change)=\"handleFileInput($event.target.files, 'coverImage')\">\n            <span class=\"file-cta\">\n              <span class=\"file-icon\">\n                <i class=\"fas fa-upload\"></i>\n              </span>\n              <span class=\"file-label\">\n                Choose a file…\n              </span>\n            </span>\n            <span class=\"file-name\">\n              {{(coverImage!=null) ? coverImage.name : 'No File Selected'}}\n            </span>\n          </label>\n        </div>\n      </diV>\n      <div class=\"field\">\n        <label class=\"label\">Attachments</label>\n        <div class=\"tags are-medium\" *ngIf=\"jobPost!=null\">\n          <span class=\"tag\" *ngFor=\"let att of jobPost.attachments\">{{att.fileName}}\n            <button type=\"button\" class=\"delete is-small\" (click)=\"removeAttachment(att)\"></button></span>\n        </div>\n        <div class=\"tags are-medium\">\n          <span class=\"tag\" *ngFor=\"let att of attachmentsToBeAdded\">{{att.name}} <button type=\"button\"\n              class=\"delete is-small\" (click)=\"removeAttachmentFromTempList(att)\"></button></span>\n        </div>\n        <div class=\"file has-name is-medium\">\n          <label class=\"file-label\">\n            <input class=\"file-input\" type=\"file\" name=\"resume\"\n              (change)=\"handleFileInput($event.target.files, 'attachment')\">\n            <span class=\"file-cta\">\n              <span class=\"file-icon\">\n                <i class=\"fas fa-upload\"></i>\n              </span>\n              <span class=\"file-label\">\n                Choose a file…\n              </span>\n            </span>\n            <span class=\"file-name\">\n              {{(attachmentToUpload!=null) ? attachmentToUpload.name : 'No File Selected'}}\n            </span>\n          </label>\n        </div>\n        <div style=\"padding-top: 10px;\">\n          <button type=\"button\" class=\"button is-small\" (click)=\"addtoTempAttachmentList()\" [disabled]=\"attachmentToUpload==null\"> Add\n            attachment</button>\n        </div>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Categories</label>\n        <div class=\"tags are-medium\">\n          <span class=\"tag\" *ngFor=\"let tag of tags\">{{tag}} <button type=\"button\" class=\"delete is-small\"\n              (click)=\"removeTag(tag)\"></button></span>\n        </div>\n        <div class=\"tags are-medium\">\n          <span class=\"tag\" *ngFor=\"let tag of categoriesSelected\">{{tag.displayName}} <button type=\"button\"\n              class=\"delete is-small\" (click)=\"removeFromSelectedTag(tag)\"></button></span>\n        </div>\n        <select name=\"contactMethod\" id=\"contactMethod\" class=\"form-control\" [(ngModel)]=\"categorySelected\">\n          <option *ngFor=\"let cat of categoriesOptions\" [ngValue]=\"cat\">{{ cat.displayName }}</option>\n        </select>\n        <button type=\"button\" class=\"button is-small\" (click)=\"addToTempCategory()\">Add Category</button>\n\n      </div>\n      <button type=\"submit\" class=\"button is-large is-warning\"\n        [disabled]=\"jobPostForm.invalid || (jobPost && jobPost.imageUrl==null && coverImage==null)\">Submit</button>\n    </form>\n  </div>\n</section>\n<div class=\"overlay\" *ngIf=\"isLoading\" >\n  <div class=\"center\">\n      <mat-progress-spinner diameter=50\n                          mode=\"indeterminate\"\n                color=\"accent\">\n    </mat-progress-spinner>\n  </div>\n  </div>\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { JobPost, Attachment } from '../models/jobpost.model';\nimport { Category } from '../models/category.model';\nimport { AngularFirestore } from '@angular/fire/firestore/firestore';\nimport * as firebase from 'firebase';\nimport { FirebaseopsService } from '../firebaseops.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { GeneralDialog } from '../dialog/general-dialog';\nimport { takeUntil, catchError } from 'rxjs/operators';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { ThemePalette } from '@angular/material/core';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\n\n//import { EventEmitter } from 'protractor';\n\n@Component({\n  selector: 'app-jobpost-editor',\n  templateUrl: './jobpost-editor.component.html',\n  styleUrls: ['./jobpost-editor.component.css']\n})\nexport class JobpostEditorComponent implements OnInit, OnDestroy {\n\n  destroy$: Subject<null> = new Subject();\n\n  @Input()\n  documentId: string = \"\";\n\n  @Output()\n  onComplete: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  jobPost: JobPost;\n\n  title: string;\n  description: string;\n  jobContent: string;\n  jobType: string = 'govt';\n  lastDate: Date = null;\n  coverImage: File = null;\n\n  tags: string[] = [];\n  categorySelected: Category;\n  categoriesSelected: Category[] = [];\n  categoriesOptions: Category[];\n\n  attachmentToUpload: File;\n  attachments: Attachment[];\n  attachmentsToBeAdded: File[] = [];\n\n  isLoading = false;\n\n  constructor(private readonly snackBar: MatSnackBar,private firebaseOps: FirebaseopsService, private dialog: MatDialog) {\n\n  }\n\n  ngOnInit(): void {\n    this.initiateAllFields();\n    this.firebaseOps.getCategories().subscribe((cats) => {\n      console.log(cats);\n      const catToInclude = ['Government Jobs', 'Private Jobs']\n      this.categoriesOptions = cats.filter(cat=> !catToInclude.includes(cat.tagName) );\n      this.categorySelected = this.categoriesOptions[0];\n    });\n\n\n  }\n\n\n  onItemChange(type) {\n    console.log(type + ' ' + this.jobType);\n    this.jobType = type;\n  }\n\n  handleFileInput(files: FileList, type) {\n    if (type === \"attachment\") {\n      this.attachmentToUpload = files.item(0);\n    } else if (type === \"coverImage\") {\n      this.coverImage = files.item(0);\n      console.log(this.coverImage);\n    }\n\n  }\n  removeTag(tag) {\n    console.log(tag);\n    this.tags = this.tags.filter(cat => cat !== tag);\n  }\n\n  removeAttachment(attachment) {\n    this.jobPost.attachments = this.jobPost.attachments.filter(att => att.fileName !== attachment.fileName);\n  }\n\n  addToTempCategory() {\n    if (!this.categoriesSelected.includes(this.categorySelected)) {\n      this.categoriesSelected.push(this.categorySelected);\n    }\n  }\n\n  async addtoTempAttachmentList() {\n    this.attachmentsToBeAdded.push(this.attachmentToUpload);\n    this.attachmentToUpload = null;\n\n  }\n  removeFromSelectedTag(tag) {\n    this.categoriesSelected = this.categoriesSelected.filter(cat => cat.displayName !== tag.displayName);\n  }\n\n  removeAttachmentFromTempList(fileToRemove) {\n\n    this.attachmentsToBeAdded = this.attachmentsToBeAdded.filter(att => att.name !== fileToRemove.name);\n  }\n\n async submitForm() {\n    let attachmentsUploaded, coverImageToUpload;\n    this.isLoading = true;\n    if(this.coverImage!= null){\n      coverImageToUpload = await this.uploadFile('jobPost', this.coverImage)\n    }\n    if(this.attachmentsToBeAdded.length>0){\n        attachmentsUploaded = await this.uploadAttachments();\n    }\n    const jobType = (this.jobType === 'govt') ? 'Government Jobs' :  'Private Jobs';\n    let tags = [ jobType ];\n    const selectedTagNames = this.categoriesSelected.map(cat=> cat.displayName);\n\n    tags = tags.concat(selectedTagNames);\n    let jobPost: JobPost = this.createJobPost(attachmentsUploaded, coverImageToUpload, this.lastDate, tags);\n    console.log(jobPost);\n    if(jobPost.id!=null){\n      this.firebaseOps.modifyJobPost(jobPost).then(()=>{\n        this.isLoading = false;\n        this.dialog.open(GeneralDialog, { data: \"Post creation/updation successful!\" });\n        this.onComplete.emit(jobPost);\n      });\n    }else{\n      this.firebaseOps.addJobPost(jobPost).then((ref)=>{\n        this.isLoading = false;\n        jobPost.id =  ref.id;\n        this.dialog.open(GeneralDialog, { data: \"Post creation/updation successful!\" });\n        this.onComplete.emit(jobPost);\n      });\n    }\n\n  }\n\n  initiateAllFields() {\n    if (this.jobPost != null) {\n      this.title = this.jobPost.title;\n      this.description = this.jobPost.description;\n      this.jobContent = this.jobPost.content;\n      this.tags = this.jobPost.tags;\n      this.jobType = this.tags.includes('Government Jobs') ? 'govt' : 'pvt'\n    } else {\n      console.log(\"Field is empty\")\n    }\n  }\n\n\n async uploadAttachments() : Promise<Attachment[]>{\n    const attachments: Attachment[] = [];\n    //const url = await this.uploadFile('attachments', null);\n    for (const file of this.attachmentsToBeAdded) {\n      const url =  await this.uploadFile('attachments', file);\n      console.log(url);\n      const att: Attachment = { fileName: file.name, fileUrl: url};\n      attachments.push(att);\n    }\n    return attachments;\n  }\n\n  uploadFile(path, file) : Promise<string>{\n    const downloadUrl = this.firebaseOps.uploadFileAndGetMetadata(path,file).downloadUrl$;\n    return new Promise<string>(resolve=>{\n      downloadUrl.pipe(takeUntil(this.destroy$), catchError((error) => {\n        this.snackBar.open('Error uploading file', 'Close',{});\n        resolve(null);\n        return EMPTY;\n    })).subscribe(downloadUrl=>{\n      resolve(downloadUrl);\n    });\n    });\n\n  }\n\n\n\n  createJobPost(attachments: Attachment[], newImageUrl, lastDate, newTags): JobPost {\n    attachments = (attachments==undefined) ?  []: attachments;\n    const jobAttachemnet =  (this.jobPost!=null)? this.jobPost.attachments.concat(attachments) : attachments;\n    const tags = (this.jobPost!=null) ? this.jobPost.tags.concat(newTags) : newTags\n    const imageUrl = (newImageUrl==undefined) ? this.jobPost.imageUrl : newImageUrl;\n    return {\n      title: this.title,\n      id: null,\n      description: this.description,\n      content: this.jobContent,\n      attachments: jobAttachemnet,\n      createdDate: new Date(),\n      lastDate,\n      imageUrl,\n      tags\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(null);\n  }\n}\n","export class Category{\n  displayName: string;\n  tagName: string;\n  constructor(displayName, tagName){\n    this.displayName = displayName;\n    this.tagName = tagName;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-newpost',\n  templateUrl: './newpost.component.html',\n  styleUrls: ['./newpost.component.css']\n})\nexport class NewpostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(window);\n    console.log(window.history.state);\n  }\n\n  onFormComplete( obj){\n    console.log( obj);\n  }\n\n}\n","<section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">Add Job Post!</h1>\n    </div>\n  </div>\n</section>\n\n<app-jobpost-editor  (onComplete)=\"onFormComplete($event)\" ></app-jobpost-editor>\n","import { Directive, HostListener, EventEmitter, Output, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appScrollable]'\n})\nexport class ScrollableDirective {\n\n  @Output() scrollPosition = new EventEmitter()\n\n  constructor(public el: ElementRef) {\n    console.log(\"asdasdasdasd\")\n   }\n\n  @HostListener('scroll', ['$event'])\n  onScroll(event) {\n    try {\n\n      const top = event.target.scrollTop\n      const height = this.el.nativeElement.scrollHeight\n      const offset = this.el.nativeElement.offsetHeight\n\n      // emit bottom event\n      if (top > height - offset - 1) {\n        this.scrollPosition.emit('bottom')\n      }\n\n      // emit top event\n      if (top === 0) {\n        this.scrollPosition.emit('top')\n      }\n\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n","<section class=\"hero is-primary is-bold\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">Study Materials</h1>\n    </div>\n  </div>\n</section>\n<section class=\"section\">\n  <div class=\"container\">\n    <diV class=\"field\">\n      <label class=\"label\">Cover Image</label>\n      <div class=\"file has-name is-medium\">\n        <label class=\"file-label\">\n          <input class=\"file-input\" type=\"file\" name=\"resume\" (change)=\"handleFileInput($event.target.files)\">\n          <span class=\"file-cta\">\n            <span class=\"file-icon\">\n              <i class=\"fas fa-upload\"></i>\n            </span>\n            <span class=\"file-label\">\n              Choose a file…\n            </span>\n          </span>\n          <span class=\"file-name\">\n            {{(fileSelected!=null) ? fileSelected.name : 'No File Selected'}}\n          </span>\n        </label>\n        <div style=\"width: 20px;\"></div>\n        <button type=\"button\" (click)=\"uploadDocument()\" [disabled]=\"fileSelected==null\"> Upload Document</button>\n      </div>\n    </diV>\n  </div>\n</section>\n<section  class=\"section\">\n  <div class=\"container\" *ngIf=\"studyMaterialList!=null\">\n    <mat-nav-list>\n      <mat-list-item  *ngFor=\"let item of studyMaterialList | async\">\n         <span matLine>{{ item.fileName }}</span>\n         <button mat-icon-button>\n          <mat-icon> delete</mat-icon>\n       </button>\n         <button mat-icon-button>\n            <mat-icon>info</mat-icon>\n         </button>\n\n      </mat-list-item>\n    </mat-nav-list>\n  </div>\n</section>\n<div class=\"overlay\" *ngIf=\"isLoading\" >\n  <div class=\"center\">\n      <mat-progress-spinner diameter=50\n                          mode=\"indeterminate\"\n                color=\"accent\">\n    </mat-progress-spinner>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GeneralDialog } from '../dialog/general-dialog';\nimport { FirebaseopsService } from '../firebaseops.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { takeUntil, catchError } from 'rxjs/operators';\nimport { Subject, EMPTY, Observable } from 'rxjs';\nimport { Attachment } from '../models/jobpost.model';\n\n@Component({\n  selector: 'app-studymaterial',\n  templateUrl: './studymaterial.component.html',\n  styleUrls: ['./studymaterial.component.css']\n})\nexport class StudymaterialComponent implements OnInit {\n  fileSelected: File;\n  destroy$: Subject<null> = new Subject();\n  isLoading = false;\n  studyMaterialList: Observable<Attachment[]> = null;\n\n  constructor(private readonly snackBar: MatSnackBar, private dialog: MatDialog, private firebaseOps: FirebaseopsService) {\n\n  }\n\n  ngOnInit(): void {\n      this.studyMaterialList = this.firebaseOps.getStudyMaterials();\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileSelected = files.item(0);\n  }\n  async uploadDocument() {\n    this.isLoading = true;\n    var url = await this.uploadFile('study-material', this.fileSelected);\n    let ref = await this.firebaseOps.addStudyMaterial({fileName: this.fileSelected.name, fileUrl: url});\n    console.log(url);\n    console.log(ref);\n    this.fileSelected = null;\n    this.isLoading = false;\n    this.dialog.open(GeneralDialog, { data: \"Post creation/updation successful!\" });\n  }\n\n  uploadFile(path, file): Promise<string> {\n    const downloadUrl = this.firebaseOps.uploadFileAndGetMetadata(path, file).downloadUrl$;\n    return new Promise<string>(resolve => {\n      downloadUrl.pipe(takeUntil(this.destroy$), catchError((error) => {\n        this.snackBar.open('Error uploading file', 'Close', {});\n        resolve(null);\n        return EMPTY;\n      })).subscribe(downloadUrl => {\n        resolve(downloadUrl);\n      });\n    });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyBttGCkOxdMrTQhE5C5HXTIbgCIWnqPp9Q\",\n    authDomain: \"jobforyoutamizha.firebaseapp.com\",\n    databaseURL: \"https://jobforyoutamizha.firebaseio.com\",\n    projectId: \"jobforyoutamizha\",\n    storageBucket: \"jobforyoutamizha.appspot.com\",\n    messagingSenderId: \"704779868817\",\n    appId: \"1:704779868817:web:6942c08280da5e24fa7d30\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}